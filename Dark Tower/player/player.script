function init(self)
	msg.post("/camera/go#camera1", "look_at", { pos = go.get_position() })	
	msg.post(".", "acquire_input_focus")
	
	-- структура описывает тайлы к которым привязаны события
	tile = {
	no_pass = 737,
	another_event = 738,	
	}
	-- структура хранит названия карт
	map = {
	village = "/map#village",
	}
	
	current_map = map.village
	print(current_map)
	print(tile.no_pass)
end

function update(self, dt)	
	--print(go.get_position())
end	

--Id тайла (в тайлсете) текущей карты, на котором находятся герои 
function get_tile_id(current_map_url)
	pos = go.get_position()
	return tilemap.get_tile(current_map_url, "event_layer", (pos.x + 16) / 16, (pos.y - 64) / 16)
end

function can_pass(tile_id)
	_tile = get_tile_id(current_map)
	if  _tile == tile.no_pass then
		return "cant_pass"
	else
		return "pass"
	end
end

function on_message(self, message_id, message, sender)
	
	if message_id == hash("up") then		
		pos = go.get_position()
		pos.y = pos.y + 16
		print(get_tile_id(current_map))
		if can_pass(get_tile_id(current_map)) ~= "cant_pass" then 
			print("ok")
			
			msg.post("/camera/go#camera1", "look_at", { pos = go.get_position() })
		--else 
		--	pos.y = pos.y - 16
	end
	go.set_position(pos)
	end
	
	if message_id == hash("down") then
		pos = go.get_position()
		pos.y = pos.y - 16
		go.set_position(pos)
		msg.post("/camera/go#camera1", "look_at", { pos = go.get_position() })
	end
	
	if message_id == hash("left") then
		pos = go.get_position()
		pos.x = pos.x - 16
		go.set_position(pos)
		msg.post("/camera/go#camera1", "look_at", { pos = go.get_position() })
	end
	
	if message_id == hash("right") then
		pos = go.get_position()
		pos.x = pos.x + 16
		go.set_position(pos)		
		msg.post("/camera/go#camera1", "look_at", { pos = go.get_position() })
	end
	
	--Для тестирования
	--print(go.get_position())	
	--print(get_tile_id("/map#village"))
	--print(current_map)
	--print(tile.no_pass)
end
	