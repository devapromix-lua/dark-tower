function init(self)
	msg.post("/camera/go#camera1", "look_at", { pos = go.get_position() })	
	msg.post(".", "acquire_input_focus")
	
	-- Тайлы событий (их id)
	tile = {
		map = {
			odoor = 123, -- Открытая дверь
			cdoor = 126, -- Закрытая дверь
		},

		empty_event = 0, -- Пустота
		no_pass_event = 737,
		another_event = 738,
		door1_event = 739,	
		door2_event = 740,	
		door3_event = 741,	
		door4_event = 742,	
		gate_event = 743,	
	}
	
	-- Названия карт (их url)
	map = {
		village = "/map#village",
		--level1 = "/map#level1",
		--level2 = "/map#level2",
		--level3 = "/map#level3",
	}
	
	-- Названия слоев карты
	layer = {
		map = "map_layer",
		event = "event_layer",
	}
	
	-- Текущая карта
	current_map = map.village
	
	-- Для теста
	--print(current_map)
	--print(tile.no_pass)
end

function update(self, dt)	
	--print(go.get_position())
end	

-- Id тайла карты, на котором находятся герои 
function get_tile_id(current_map_url, current_layer)
	pos = go.get_position()
	return tilemap.get_tile(current_map_url, current_layer, (pos.x + 16) / 16, (pos.y - 64) / 16)
end

-- Изменить id тайлa карты, на котором находятся герои
function set_tile_id(current_map_url, current_layer, tile_id)
	pos = go.get_position()
	tilemap.set_tile(current_map, current_layer, (pos.x + 16) / 16, (pos.y - 64) / 16, tile_id)
end

-- Проходим ли тайл
function can_pass(tile_id)
	_tile = get_tile_id(current_map, layer.event)
	if  _tile == tile.no_pass_event then
		return false
	else
		return true
	end
end

function on_message(self, message_id, message, sender)

	old_position = go.get_position()	
	
	-- Действия по нажатию центральной кнопки
	if message_id == hash("center") then
		--Закрыть обычную дверь
		if get_tile_id(current_map, layer.map) == tile.map.odoor then
			set_tile_id(current_map, layer.map, tile.map.cdoor)
			set_tile_id(current_map, layer.event, tile.no_pass_event)
			print("Дверь закрыта.")			
		end
		-- Двери магазинов и врата в башню в деревне
		if get_tile_id(current_map, layer.event) == tile.door1_event then
			msg.post("/map#village_scr", "open_door1")
		end
		if get_tile_id(current_map, layer.event) == tile.door2_event then
			msg.post("/map#village_scr", "open_door2")
		end
		if get_tile_id(current_map, layer.event) == tile.door3_event then
			msg.post("/map#village_scr", "open_door3")
		end
		if get_tile_id(current_map, layer.event) == tile.door4_event then
			msg.post("/map#village_scr", "open_door4")
		end
		if get_tile_id(current_map, layer.event) == tile.gate_event then
			msg.post("/map#village_scr", "open_gate")
		end
	end

	if message_id == hash("up") then
		pos = go.get_position()
		pos.y = pos.y + 16
		go.set_position(pos)
		msg.post("/camera/go#camera1", "look_at", { pos = go.get_position() })		
	end	
	
	if message_id == hash("down") then
		pos = go.get_position()
		pos.y = pos.y - 16
		go.set_position(pos)
		msg.post("/camera/go#camera1", "look_at", { pos = go.get_position() })
	end
	
	if message_id == hash("left") then
		pos = go.get_position()
		sprite.set_hflip("/player/go#player_vil", true)
		pos.x = pos.x - 16
		go.set_position(pos)
		msg.post("/camera/go#camera1", "look_at", { pos = go.get_position() })
	end
	
	if message_id == hash("right") then
		pos = go.get_position()
		sprite.set_hflip("/player/go#player_vil", false)
		pos.x = pos.x + 16
		go.set_position(pos)		
		msg.post("/camera/go#camera1", "look_at", { pos = go.get_position() })
	end
	
	-- Открытие обычных дверей
	if not can_pass(get_tile_id(current_map, layer.event)) and get_tile_id(current_map, layer.map) == tile.map.cdoor then
		set_tile_id(current_map, layer.map, tile.map.odoor)
		set_tile_id(current_map, layer.event, tile.empty_event)
		print("Дверь открыта.")
	end
	
	-- Проверка, стоит ли игрок на разрешенном месте, если нет, то возвращается на последнее известное
	if not can_pass(get_tile_id(current_map, layer.event)) then
		go.set_position(old_position)
		msg.post("/camera/go#camera1", "look_at", { pos = go.get_position() })
	end			
	
	-- Для тестирования
	--print(go.get_position())	
	--print(get_tile_id("/map#village"))
	--print(current_map)
	--print(tile.no_pass)
end
	