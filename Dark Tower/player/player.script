function init(self)
	msg.post("/camera/go#camera1", "look_at", { pos = go.get_position() })	
	msg.post(".", "acquire_input_focus")
	
	-- Тайлы событий (их id)
	tile = {
		map = {
			door    = 37,  -- Дверь дома
			sign    = 70,  -- Табличка
			odoor   = 123, -- Открытая дверь
			cdoor   = 126, -- Закрытая дверь
		},

		event = {
			empty   = 0,   -- Пустота
			no_pass = 737,
			another = 738,
			door1   = 739,	
			door2   = 740,	
			door3   = 741,	
			door4   = 742,	
			gate    = 743, -- Врата Темной Башни
		}	
	}
	
	-- Названия карт (их url)
	map = {
		village = "/map#village",
		--level1 = "/map#level1",
		--level2 = "/map#level2",
		--level3 = "/map#level3",
	}
	
	-- Названия слоев карты
	layer = {
		map    = "map_layer",
		event  = "event_layer",
	}
	
	-- Текущая карта
	current_map = map.village
	
	-- Для теста
	--print(current_map)
	--print(tile.no_pass)
end

function update(self, dt)	
	--print(go.get_position())
end	

-- Позиция партии
function get_player_position()
	local pos = go.get_position()
	pos.x = (pos.x + 16) / 16
	pos.y = (pos.y - 64) / 16
	return pos
end

-- Id тайла карты, на котором находятся герои 
function get_tile_id(current_map_url, current_layer)
	local pos = get_player_position()
	return tilemap.get_tile(current_map_url, current_layer, pos.x, pos.y)
end

-- Изменить id тайлa карты, на котором находятся герои
function set_tile_id(current_map_url, current_layer, tile_id)
	local pos = get_player_position()
	tilemap.set_tile(current_map, current_layer, pos.x, pos.y, tile_id)
end

-- Проходим ли тайл
function can_pass(tile_id)
	_tile = get_tile_id(current_map, layer.event)
	if  _tile == tile.event.no_pass then
		return false
	else
		return true
	end
end

function on_message(self, message_id, message, sender)

	-- Запоминаем старую позицию игрока
	old_position = go.get_position()	
	
	if message_id == hash("up") then
		pos = go.get_position()
		pos.y = pos.y + 16
		go.set_position(pos)
		msg.post("/camera/go#camera1", "look_at", { pos = go.get_position() })		
	end	
	
	if message_id == hash("down") then
		pos = go.get_position()
		pos.y = pos.y - 16
		go.set_position(pos)
		msg.post("/camera/go#camera1", "look_at", { pos = go.get_position() })
	end
	
	if message_id == hash("left") then
		pos = go.get_position()
		sprite.set_hflip("/player/go#player_vil", true)
		pos.x = pos.x - 16
		go.set_position(pos)
		msg.post("/camera/go#camera1", "look_at", { pos = go.get_position() })
	end
	
	if message_id == hash("right") then
		pos = go.get_position()
		sprite.set_hflip("/player/go#player_vil", false)
		pos.x = pos.x + 16
		go.set_position(pos)		
		msg.post("/camera/go#camera1", "look_at", { pos = go.get_position() })
	end
	
	-- Открытие обычных дверей автоматически
	if not can_pass(get_tile_id(current_map, layer.event)) and get_tile_id(current_map, layer.map) == tile.map.cdoor then
		set_tile_id(current_map, layer.map, tile.map.odoor)
		set_tile_id(current_map, layer.event, tile.event.empty)
	end
	
	-- Проверка, стоит ли игрок на разрешенном месте, если нет, то возвращается на последнее известное
	if not can_pass(get_tile_id(current_map, layer.event)) then
		go.set_position(old_position)
		msg.post("/camera/go#camera1", "look_at", { pos = go.get_position() })
	end			
	
	-- Действия на карте по нажатию центральной кнопки
	if message_id == hash("center") then
		--Закрыть обычную дверь кнопкой
		if get_tile_id(current_map, layer.map) == tile.map.odoor then
			set_tile_id(current_map, layer.map, tile.map.cdoor)
			set_tile_id(current_map, layer.event, tile.event.no_pass)			
		end
		-- Двери магазинов и врата в башню в деревне
		-- Читать таблички с надписями возле домов
		if get_tile_id(current_map, layer.event) == tile.event.door1 then
			if get_tile_id(current_map, layer.map) == tile.map.door then
				msg.post("/map#village_scr", "open_door1", {action = "enter"})
			else
				msg.post("/map#village_scr", "open_door1", {action = "read"})
			end
		end
		if get_tile_id(current_map, layer.event) == tile.event.door2 then
			if get_tile_id(current_map, layer.map) == tile.map.door then
				msg.post("/map#village_scr", "open_door2", {action = "enter"})
			else
				msg.post("/map#village_scr", "open_door2", {action = "read"})
			end
		end
		if get_tile_id(current_map, layer.event) == tile.event.door3 then
			if get_tile_id(current_map, layer.map) == tile.map.door then
				msg.post("/map#village_scr", "open_door3", {action = "enter"})
			else
				msg.post("/map#village_scr", "open_door3", {action = "read"})
			end
		end
		if get_tile_id(current_map, layer.event) == tile.event.door4 then
			if get_tile_id(current_map, layer.map) == tile.map.door then
				msg.post("/map#village_scr", "open_door4", {action = "enter"})
			else
				msg.post("/map#village_scr", "open_door4", {action = "read"})
			end
		end
		if get_tile_id(current_map, layer.event) == tile.event.gate then
			msg.post("/map#village_scr", "open_gate")
		end
	end
	
	-- Надписи на кнопке #5 сменяются во время движения партии
	-- Войти в дом или башню
	if get_tile_id(current_map, layer.map) == tile.map.door or
		get_tile_id(current_map, layer.event) == tile.event.gate then
		msg.post("/GUI/go#control", "change_button_text", {text5="войти"})
	-- Закрыть дверь
	elseif get_tile_id(current_map, layer.map) == tile.map.odoor then
		msg.post("/GUI/go#control", "change_button_text", {text5="закрыть"})
	-- Прочитать надпись на табличке
	elseif get_tile_id(current_map, layer.map) == tile.map.sign then
		msg.post("/GUI/go#control", "change_button_text", {text5="читать"})
	-- Пусто
	else
		msg.post("/GUI/go#control", "change_button_text", {text5=""})
	end
end
	